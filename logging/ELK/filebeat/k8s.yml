###########################################
#                                         #
# Implementacion de FileBeat para captar  #
# logs de la aplicacion en el cluster.    #
#                                         #
###########################################
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: kube-system
  labels:
    k8s-app: filebeat
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      labels:
        k8s-app: filebeat
    spec:
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 0
      containers:
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:7.17.0
        args: [
            "-c", "/etc/filebeat.yml",
            "-e"
          ]
        securityContext:
          runAsUser: 0
          runAsGroup: 0 
        volumeMounts:
            - name: config
              mountPath: /etc/filebeat.yml
              subPath: filebeat.yml
            - name: logs
              mountPath: /home/app/data/logs
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: filebeat-config
        - name: logs
          hostPath:
            path: /home/app/data/logs

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: kube-system
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
data:
  filebeat.yml: |
    filebeat.inputs:
      - type: log
        enabled: true
        paths:
          - /home/app/data/logs/app.log
        fields:
          app: myapp
          environment: production
        fields_under_root: true
    output.logstash:
      hosts: ["http://host.minikube.internal:5044"]
    output.elasticsearch:
      hosts: ["http://host.minikube.internal:9200"]

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
  - kind: ServiceAccount
    name: filebeat
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
